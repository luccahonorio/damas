{"ast":null,"code":"var _jsxFileName = \"/Users/henriqueolivoantonio/Desktop/Projects/damas/src/page/Dashboard/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FaCrown } from 'react-icons/fa';\nimport { handleAlphaBeta } from '../../logic/ia';\nimport { Container, Board, Square, Piece } from './styles';\nimport { showMovement, movePiece, squareSelected, pieceDarker } from '../../logic';\nimport { showMovementsAction, movePiecesAction } from '../../store/modules/board/actions';\nexport default function Page() {\n  const dispatch = useDispatch();\n  const board = useSelector(state => state.board.board);\n  const [selected, setSelected] = useState(null);\n  const [turn, setTurn] = useState('white');\n\n  function showMovements({\n    square\n  }) {\n    if (square.piece.color === pieceDarker) return;\n    if (turn === 'black') return;\n    dispatch(showMovementsAction({\n      board: showMovement({\n        board,\n        square\n      })\n    }));\n    setSelected(square);\n  }\n\n  function movePieces({\n    square,\n    selected,\n    ia = false\n  }) {\n    const newBoard = movePiece({\n      board,\n      square,\n      selected\n    });\n\n    if (newBoard) {\n      dispatch(movePiecesAction({\n        board: newBoard ? newBoard : board\n      }));\n      setSelected(null);\n    }\n\n    if (!ia) {\n      setTurn('black');\n    }\n  }\n\n  function moveIA() {\n    const {\n      selected,\n      square\n    } = handleAlphaBeta({\n      board\n    });\n    square.color = squareSelected;\n    movePieces({\n      square,\n      selected: selected,\n      ia: true\n    }); // check if can eat the second time\n\n    const {\n      sum\n    } = handleAlphaBeta({\n      board\n    });\n\n    if (sum >= 1) {\n      return moveIA();\n    }\n\n    setTurn('white');\n  }\n\n  useEffect(() => {\n    if (turn === 'black') {\n      setTimeout(moveIA, 1000);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [turn]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, board.map(row => row.map(sq => /*#__PURE__*/React.createElement(Square, {\n    key: row.indexOf(sq),\n    color: sq.color,\n    onClick: () => movePieces({\n      square: sq,\n      selected\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, sq.piece && /*#__PURE__*/React.createElement(Piece, {\n    key: row.indexOf(sq),\n    color: sq.piece.color,\n    onClick: () => showMovements({\n      square: sq\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, sq.piece.queen && /*#__PURE__*/React.createElement(FaCrown, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 38\n    }\n  })))))));\n}","map":{"version":3,"sources":["/Users/henriqueolivoantonio/Desktop/Projects/damas/src/page/Dashboard/index.js"],"names":["React","useState","useEffect","useSelector","useDispatch","FaCrown","handleAlphaBeta","Container","Board","Square","Piece","showMovement","movePiece","squareSelected","pieceDarker","showMovementsAction","movePiecesAction","Page","dispatch","board","state","selected","setSelected","turn","setTurn","showMovements","square","piece","color","movePieces","ia","newBoard","moveIA","sum","setTimeout","map","row","sq","indexOf","queen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FaCrown } from 'react-icons/fa';\n\nimport { handleAlphaBeta } from '../../logic/ia';\nimport { Container, Board, Square, Piece } from './styles';\nimport {\n  showMovement,\n  movePiece,\n  squareSelected,\n  pieceDarker,\n} from '../../logic';\nimport {\n  showMovementsAction,\n  movePiecesAction,\n} from '../../store/modules/board/actions';\n\nexport default function Page() {\n  const dispatch = useDispatch();\n  const board = useSelector((state) => state.board.board);\n  const [selected, setSelected] = useState(null);\n  const [turn, setTurn] = useState('white');\n\n  function showMovements({ square }) {\n    if (square.piece.color === pieceDarker) return;\n    if (turn === 'black') return;\n    dispatch(showMovementsAction({ board: showMovement({ board, square }) }));\n    setSelected(square);\n  }\n\n  function movePieces({ square, selected, ia = false }) {\n    const newBoard = movePiece({ board, square, selected });\n    if (newBoard) {\n      dispatch(movePiecesAction({ board: newBoard ? newBoard : board }));\n      setSelected(null);\n    }\n\n    if (!ia) {\n      setTurn('black');\n    }\n  }\n\n  function moveIA() {\n    const { selected, square } = handleAlphaBeta({ board });\n    square.color = squareSelected;\n    movePieces({ square, selected: selected, ia: true });\n\n    // check if can eat the second time\n    const { sum } = handleAlphaBeta({ board });\n    if (sum >= 1) {\n      return moveIA();\n    }\n\n    setTurn('white');\n  }\n\n  useEffect(() => {\n    if (turn === 'black') {\n      setTimeout(moveIA, 1000);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [turn]);\n\n  return (\n    <Container>\n      <Board>\n        {board.map((row) =>\n          row.map((sq) => (\n            <Square\n              key={row.indexOf(sq)}\n              color={sq.color}\n              onClick={() => movePieces({ square: sq, selected })}\n            >\n              {sq.piece && (\n                <Piece\n                  key={row.indexOf(sq)}\n                  color={sq.piece.color}\n                  onClick={() => showMovements({ square: sq })}\n                >\n                  {sq.piece.queen && <FaCrown size={20} />}\n                </Piece>\n              )}\n            </Square>\n          ))\n        )}\n      </Board>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}