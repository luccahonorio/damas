{"ast":null,"code":"import { takeLatest, all } from 'redux-saga/effects';\nimport { handlePositionPiece, handleAllowedPiece, printAllowedMovements } from '../../../logic/index';\nexport function handlePrintMovements({\n  payload\n}) {\n  const {\n    board,\n    square\n  } = payload; // checking witch side is available\n\n  const allowedPositions = handlePositionPiece({\n    board,\n    square\n  }); // checking if this side have a piece\n\n  const allowedMovements = handleAllowedPiece({\n    board,\n    square,\n    allowedMovements: allowedPositions\n  });\n  console.log(printAllowedMovements({\n    board,\n    allowedMovements\n  }));\n}\nexport default all([takeLatest('@board/HANDLE_PRINT_MOVEMENTS', handlePrintMovements)]);","map":{"version":3,"sources":["/Users/henriqueolivoantonio/Desktop/Projects/damas/src/store/modules/board/sagas.js"],"names":["takeLatest","all","handlePositionPiece","handleAllowedPiece","printAllowedMovements","handlePrintMovements","payload","board","square","allowedPositions","allowedMovements","console","log"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,oBAAhC;AACA,SACEC,mBADF,EAEEC,kBAFF,EAGEC,qBAHF,QAIO,sBAJP;AAMA,OAAO,SAASC,oBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA2C;AAChD,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,OAA1B,CADgD,CAEhD;;AACA,QAAMG,gBAAgB,GAAGP,mBAAmB,CAAC;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAA5C,CAHgD,CAIhD;;AACA,QAAME,gBAAgB,GAAGP,kBAAkB,CAAC;AAC1CI,IAAAA,KAD0C;AAE1CC,IAAAA,MAF0C;AAG1CE,IAAAA,gBAAgB,EAAED;AAHwB,GAAD,CAA3C;AAMAE,EAAAA,OAAO,CAACC,GAAR,CAAYR,qBAAqB,CAAC;AAAEG,IAAAA,KAAF;AAASG,IAAAA;AAAT,GAAD,CAAjC;AACD;AAED,eAAeT,GAAG,CAAC,CACjBD,UAAU,CAAC,+BAAD,EAAkCK,oBAAlC,CADO,CAAD,CAAlB","sourcesContent":["import { takeLatest, all } from 'redux-saga/effects';\nimport {\n  handlePositionPiece,\n  handleAllowedPiece,\n  printAllowedMovements,\n} from '../../../logic/index';\n\nexport function handlePrintMovements({ payload }) {\n  const { board, square } = payload;\n  // checking witch side is available\n  const allowedPositions = handlePositionPiece({ board, square });\n  // checking if this side have a piece\n  const allowedMovements = handleAllowedPiece({\n    board,\n    square,\n    allowedMovements: allowedPositions,\n  });\n\n  console.log(printAllowedMovements({ board, allowedMovements }));\n}\n\nexport default all([\n  takeLatest('@board/HANDLE_PRINT_MOVEMENTS', handlePrintMovements),\n]);\n"]},"metadata":{},"sourceType":"module"}