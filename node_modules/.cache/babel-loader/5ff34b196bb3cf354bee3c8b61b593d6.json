{"ast":null,"code":"var _jsxFileName = \"/Users/henriqueolivoantonio/Desktop/Projects/damas/src/page/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { darken } from 'polished';\nimport { handleBorder, showMovements, handleMove } from '../logic';\nimport { Container, Board, Square, Piece } from './styles';\nexport default function Page() {\n  const [board, setBoard] = useState(handleBorder());\n  const [squareSelected, setSquareSelected] = useState(null);\n\n  function printMovements(square) {\n    if (!square.allowed.right && !square.allowed.left) {\n      return;\n    } // duplication to another local memory\n\n\n    const newBoard = JSON.parse(JSON.stringify(handleBorder()));\n\n    if (square.id === squareSelected) {\n      setBoard(newBoard);\n      setSquareSelected(null);\n      return;\n    }\n\n    const {\n      right,\n      left\n    } = showMovements(square);\n\n    if (right) {\n      const a = newBoard[right.row][right.square];\n      a.color = darken(0.2, right.color);\n\n      a.available = () => move(square, a);\n    }\n\n    if (left) {\n      const a = newBoard[left.row][left.square];\n      a.color = darken(0.2, left.color);\n\n      a.available = () => move(square, a);\n    }\n\n    setSquareSelected(square.id);\n    setBoard(newBoard);\n  }\n\n  function move(actualSquare, futureSquare) {\n    handleMove(actualSquare, futureSquare);\n    setBoard(handleBorder());\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, board.map(row => row.map(square => /*#__PURE__*/React.createElement(Square, {\n    key: row.indexOf(square),\n    color: square.color,\n    available: square.available,\n    onClick: square.available,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, square.piece && /*#__PURE__*/React.createElement(Piece, {\n    onClick: () => printMovements(square),\n    key: row.indexOf(square),\n    color: square.piece,\n    allowed: square.allowed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/henriqueolivoantonio/Desktop/Projects/damas/src/page/index.js"],"names":["React","useState","useEffect","darken","handleBorder","showMovements","handleMove","Container","Board","Square","Piece","Page","board","setBoard","squareSelected","setSquareSelected","printMovements","square","allowed","right","left","newBoard","JSON","parse","stringify","id","a","row","color","available","move","actualSquare","futureSquare","map","indexOf","piece"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { darken } from 'polished';\nimport { handleBorder, showMovements, handleMove } from '../logic';\n\nimport { Container, Board, Square, Piece } from './styles';\n\nexport default function Page() {\n  const [board, setBoard] = useState(handleBorder());\n  const [squareSelected, setSquareSelected] = useState(null);\n\n  function printMovements(square) {\n    if (!square.allowed.right && !square.allowed.left) {\n      return;\n    }\n\n    // duplication to another local memory\n    const newBoard = JSON.parse(JSON.stringify(handleBorder()));\n\n    if (square.id === squareSelected) {\n      setBoard(newBoard);\n      setSquareSelected(null);\n      return;\n    }\n\n    const { right, left } = showMovements(square);\n\n    if (right) {\n      const a = newBoard[right.row][right.square];\n\n      a.color = darken(0.2, right.color);\n      a.available = () => move(square, a);\n    }\n\n    if (left) {\n      const a = newBoard[left.row][left.square];\n\n      a.color = darken(0.2, left.color);\n      a.available = () => move(square, a);\n    }\n\n    setSquareSelected(square.id);\n    setBoard(newBoard);\n  }\n\n  function move(actualSquare, futureSquare) {\n    handleMove(actualSquare, futureSquare);\n    setBoard(handleBorder());\n  }\n\n  return (\n    <Container>\n      <Board>\n        {board.map((row) =>\n          row.map((square) => (\n            <Square\n              key={row.indexOf(square)}\n              color={square.color}\n              available={square.available}\n              onClick={square.available}\n            >\n              {square.piece && (\n                <Piece\n                  onClick={() => printMovements(square)}\n                  key={row.indexOf(square)}\n                  color={square.piece}\n                  allowed={square.allowed}\n                />\n              )}\n            </Square>\n          ))\n        )}\n      </Board>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}