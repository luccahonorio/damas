{"ast":null,"code":"import { darken } from 'polished';\nimport { FaCrown } from 'react-icons/fa';\nconst squareColorLighter = 'rgb(212,198,159)';\nconst squareColorDarker = 'rgb(142,108,80)';\nconst pieceDarker = 'rgb(82,57,47)';\nconst pieceLighter = 'rgb(230,183,79)';\nconst squareSelected = darken(0.2, squareColorDarker);\n\nfunction piece({\n  color\n}) {\n  return {\n    color: color === pieceDarker ? pieceDarker : pieceLighter,\n    queen: false\n  };\n}\n\nfunction square({\n  id,\n  piece,\n  color\n}) {\n  return {\n    id,\n    piece,\n    color: color === squareColorDarker ? squareColorDarker : squareColorLighter\n  };\n}\n\nexport const board = [[square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 1,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 2,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 3,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 4,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 5,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n})], [square({\n  id: 6,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 7,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 8,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 9,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 10,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n})], [square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 11,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 12,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 13,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 14,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 15,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n})], [square({\n  id: 16,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 17,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 18,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 19,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 20,\n  piece: piece({\n    color: pieceDarker\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n})], [square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 21,\n  piece: null,\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 22,\n  piece: null,\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 23,\n  piece: null,\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 24,\n  piece: null,\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 25,\n  piece: null,\n  color: squareColorDarker\n})], [square({\n  id: 26,\n  piece: null,\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 27,\n  piece: null,\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 28,\n  piece: null,\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 29,\n  piece: null,\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 30,\n  piece: null,\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n})], [square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 31,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 32,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 33,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 34,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 35,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n})], [square({\n  id: 36,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 37,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 38,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 39,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 40,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n})], [square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 41,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 42,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 43,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 44,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 45,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n})], [square({\n  id: 46,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 47,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 48,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 49,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n}), square({\n  id: 50,\n  piece: piece({\n    color: pieceLighter\n  }),\n  color: squareColorDarker\n}), square({\n  id: null,\n  piece: null,\n  color: squareColorLighter\n})]];\n\nfunction getSquareInfo({\n  board,\n  square\n}) {\n  let indexSquare = null;\n  board.forEach(row => row.forEach(sq => {\n    if (sq && sq.id && sq.id === square.id) {\n      indexSquare = {\n        row: board.indexOf(row),\n        index: row.indexOf(sq),\n        piece: sq.piece,\n        id: sq.id\n      };\n    }\n  }));\n  return indexSquare;\n}\n\nfunction copyBoard({\n  board\n}) {\n  const newBoard = JSON.parse(JSON.stringify(board)).map(row => {\n    return row.map(sq => {\n      if (sq.color === squareSelected) {\n        sq.color = squareColorDarker;\n      }\n\n      return sq;\n    });\n  });\n  return newBoard;\n} // mostra os movimentos possíveis da peça\n\n\nexport function showMovement({\n  board,\n  square\n}) {\n  const newBoard = copyBoard({\n    board\n  });\n  const squareInfo = getSquareInfo({\n    board,\n    square\n  }); // se ele é rainha\n\n  if (square.piece.queen) {\n    return showMovementQueen();\n  } // se ele é branco\n\n\n  if (square.piece.color === pieceLighter) {\n    return showMovementLight({\n      squareInfo,\n      board: newBoard\n    });\n  } // se ele é preto\n\n\n  return showMovementDark({\n    squareInfo,\n    board: newBoard\n  });\n}\n\nfunction checkEatingLight({\n  board,\n  square,\n  direction\n}) {\n  const squareInfo = getSquareInfo({\n    board,\n    square\n  });\n\n  if (direction === 'left') {\n    if (squareInfo.index === 0) {\n      return false;\n    }\n\n    if (!board[squareInfo.row - 1][squareInfo.index - 1].piece) {\n      return true;\n    }\n  } else {\n    if (squareInfo.index === 9) {\n      return false;\n    }\n\n    if (!board[squareInfo.row - 1][squareInfo.index + 1].piece) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction checkEatingDark({\n  board,\n  square,\n  direction\n}) {\n  const squareInfo = getSquareInfo({\n    board,\n    square\n  });\n\n  if (direction === 'left') {\n    if (squareInfo.index === 9) {\n      return false;\n    }\n\n    if (!board[squareInfo.row + 1][squareInfo.index + 1].piece) {\n      return true;\n    }\n  } else {\n    if (squareInfo.index === 0) {\n      return false;\n    }\n\n    if (!board[squareInfo.row + 1][squareInfo.index - 1].piece) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction showMovementLight({\n  board,\n  squareInfo\n}) {\n  // se ele tiver na posicao 0 ele nao anda mais e vira rainha\n  // se for 9 só pode mover pra esquerda\n  if (squareInfo.index === 9) {\n    const left = board[squareInfo.row - 1][squareInfo.index - 1];\n\n    if (left && left.piece && left.piece.color === pieceLighter) {\n      return board;\n    }\n\n    if (left && left.piece && left.piece.color !== pieceLighter) {\n      if (checkEatingLight({\n        board,\n        square: left,\n        direction: 'left'\n      })) {\n        const nextLeft = board[squareInfo.row - 2][squareInfo.index - 2];\n        nextLeft.color = squareSelected;\n        return board;\n      } else {\n        return board;\n      }\n    }\n\n    left.color = squareSelected;\n    return board;\n  } // se for 0 só pode mover pra direita\n\n\n  if (squareInfo.index === 0) {\n    const right = board[squareInfo.row - 1][squareInfo.index + 1];\n\n    if (right && right.piece && right.piece.color === pieceLighter) {\n      return board;\n    }\n\n    if (right && right.piece && right.piece.color !== pieceLighter) {\n      if (checkEatingLight({\n        board,\n        square: right,\n        direction: 'right'\n      })) {\n        const nextRight = board[squareInfo.row - 2][squareInfo.index + 2];\n        nextRight.color = squareSelected;\n        return board;\n      } else {\n        return board;\n      }\n    }\n\n    right.color = squareSelected;\n    return board;\n  } // pode mover para os dois lados\n\n\n  const verify = {\n    left: true,\n    right: true\n  }; // left\n\n  const left = board[squareInfo.row - 1][squareInfo.index - 1];\n\n  if (left && left.piece && left.piece.color === pieceLighter) {\n    verify.left = false;\n  }\n\n  if (left && left.piece && left.piece.color !== pieceLighter) {\n    if (checkEatingLight({\n      board,\n      square: left,\n      direction: 'left'\n    })) {\n      const nextLeft = board[squareInfo.row - 2][squareInfo.index - 2];\n      nextLeft.color = squareSelected;\n      return board;\n    } else {\n      verify.left = false;\n    }\n  } // right\n\n\n  const right = board[squareInfo.row - 1][squareInfo.index + 1];\n\n  if (right && right.piece && right.piece.color === pieceLighter) {\n    verify.right = false;\n  }\n\n  if (right && right.piece && right.piece.color !== pieceLighter) {\n    if (checkEatingLight({\n      board,\n      square: right,\n      direction: 'right'\n    })) {\n      const nextRight = board[squareInfo.row - 2][squareInfo.index + 2];\n      nextRight.color = squareSelected;\n      return board;\n    } else {\n      verify.right = false;\n    }\n  }\n\n  if (verify.right) {\n    right.color = squareSelected;\n  }\n\n  if (verify.left) {\n    left.color = squareSelected;\n  }\n\n  return board;\n}\n\nfunction showMovementDark({\n  board,\n  squareInfo\n}) {\n  // se ele tiver na posicao 0 ele nao anda mais e vira rainha\n  // se for 9 só pode mover pra esquerda\n  if (squareInfo.index === 9) {\n    const right = board[squareInfo.row + 1][squareInfo.index - 1];\n\n    if (right && right.piece && right.piece.color === pieceDarker) {\n      return board;\n    }\n\n    if (right && right.piece && right.piece.color !== pieceDarker) {\n      if (checkEatingDark({\n        board,\n        square: right,\n        direction: 'right'\n      })) {\n        const nextRight = board[squareInfo.row + 2][squareInfo.index - 2];\n        nextRight.color = squareSelected;\n        return board;\n      } else {\n        return board;\n      }\n    }\n\n    right.color = squareSelected;\n    return board;\n  } // se for 0 só pode mover pra direita\n\n\n  if (squareInfo.index === 0) {\n    const left = board[squareInfo.row + 1][squareInfo.index + 1];\n\n    if (left && left.piece && left.piece.color === pieceDarker) {\n      return board;\n    }\n\n    if (left && left.piece && left.piece.color !== pieceDarker) {\n      if (checkEatingDark({\n        board,\n        square: left,\n        direction: 'left'\n      })) {\n        const nextleft = board[squareInfo.row + 2][squareInfo.index + 2];\n        nextleft.color = squareSelected;\n        return board;\n      } else {\n        return board;\n      }\n    }\n\n    left.color = squareSelected;\n    return board;\n  } // pode mover para os dois lados\n\n\n  const verify = {\n    left: true,\n    right: true\n  }; // left\n\n  const right = board[squareInfo.row + 1][squareInfo.index - 1];\n\n  if (right && right.piece && right.piece.color === pieceDarker) {\n    verify.right = false;\n  }\n\n  if (right && right.piece && right.piece.color !== pieceDarker) {\n    if (checkEatingDark({\n      board,\n      square: right,\n      direction: 'right'\n    })) {\n      const nextright = board[squareInfo.row + 2][squareInfo.index - 2];\n      nextright.color = squareSelected;\n      return board;\n    } else {\n      verify.right = false;\n    }\n  } // right\n\n\n  const left = board[squareInfo.row + 1][squareInfo.index + 1];\n\n  if (left.piece && left.piece.color === pieceDarker) {\n    verify.left = false;\n  }\n\n  if (left.piece && left.piece.color !== pieceDarker) {\n    if (checkEatingDark({\n      board,\n      square: left,\n      direction: 'left'\n    })) {\n      const nextRight = board[squareInfo.row + 2][squareInfo.index + 2];\n      nextRight.color = squareSelected;\n      return board;\n    } else {\n      verify.left = false;\n    }\n  }\n\n  if (verify.right) {\n    right.color = squareSelected;\n  }\n\n  if (verify.left) {\n    left.color = squareSelected;\n  }\n\n  return board;\n}\n\nfunction showMovementQueen() {}\n\nexport function movePiece({\n  board,\n  square,\n  selected\n}) {\n  if (square.color !== squareSelected) return;\n  const selectedInfo = getSquareInfo({\n    board,\n    square: selected\n  });\n  const squareInfo = getSquareInfo({\n    board,\n    square\n  });\n  const newBoard = copyBoard({\n    board\n  }); // add\n\n  newBoard[squareInfo.row][squareInfo.index].piece = selected.piece; // remove\n\n  newBoard[selectedInfo.row][selectedInfo.index].piece = null; // branco\n\n  if (selectedInfo.row - squareInfo.row === 2) {\n    console.log('oi');\n\n    if (squareInfo.index > selected.index) {\n      console.log('oiaaaa'); //right\n\n      newBoard[selectedInfo.row - 1][selectedInfo.index + 1].piece = null;\n    } else {\n      //left\n      newBoard[selectedInfo.row - 1][selectedInfo.index - 1].piece = null;\n    }\n  }\n\n  return newBoard;\n}","map":{"version":3,"sources":["/Users/henriqueolivoantonio/Desktop/Projects/damas/src/logic/index.js"],"names":["darken","FaCrown","squareColorLighter","squareColorDarker","pieceDarker","pieceLighter","squareSelected","piece","color","queen","square","id","board","getSquareInfo","indexSquare","forEach","row","sq","indexOf","index","copyBoard","newBoard","JSON","parse","stringify","map","showMovement","squareInfo","showMovementQueen","showMovementLight","showMovementDark","checkEatingLight","direction","checkEatingDark","left","nextLeft","right","nextRight","verify","nextleft","nextright","movePiece","selected","selectedInfo","console","log"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,MAAMC,kBAAkB,GAAG,kBAA3B;AACA,MAAMC,iBAAiB,GAAG,iBAA1B;AAEA,MAAMC,WAAW,GAAG,eAApB;AACA,MAAMC,YAAY,GAAG,iBAArB;AAEA,MAAMC,cAAc,GAAGN,MAAM,CAAC,GAAD,EAAMG,iBAAN,CAA7B;;AAEA,SAASI,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACxB,SAAO;AACLA,IAAAA,KAAK,EAAEA,KAAK,KAAKJ,WAAV,GAAwBA,WAAxB,GAAsCC,YADxC;AAELI,IAAAA,KAAK,EAAE;AAFF,GAAP;AAID;;AAED,SAASC,MAAT,CAAgB;AAAEC,EAAAA,EAAF;AAAMJ,EAAAA,KAAN;AAAaC,EAAAA;AAAb,CAAhB,EAAsC;AACpC,SAAO;AACLG,IAAAA,EADK;AAELJ,IAAAA,KAFK;AAGLC,IAAAA,KAAK,EAAEA,KAAK,KAAKL,iBAAV,GAA8BA,iBAA9B,GAAkDD;AAHpD,GAAP;AAKD;;AAED,OAAO,MAAMU,KAAK,GAAG,CACnB,CACEF,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CADR,EAEEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,CADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAFR,EAOEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAPR,EAQEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,CADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CARR,EAaEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAbR,EAcEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,CADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAdR,EAmBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAnBR,EAoBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,CADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CApBR,EAyBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAzBR,EA0BEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,CADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CA1BR,CADmB,EAiCnB,CACEO,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,CADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CADR,EAMEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CANR,EAOEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,CADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAPR,EAYEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAZR,EAaEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,CADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAbR,EAkBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAlBR,EAmBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,CADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAnBR,EAwBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAxBR,EAyBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAzBR,EA8BEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CA9BR,CAjCmB,EAiEnB,CACEQ,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CADR,EAEEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAFR,EAOEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAPR,EAQEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CARR,EAaEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAbR,EAcEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAdR,EAmBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAnBR,EAoBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CApBR,EAyBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAzBR,EA0BEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CA1BR,CAjEmB,EAiGnB,CACEO,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CADR,EAMEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CANR,EAOEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAPR,EAYEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAZR,EAaEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAbR,EAkBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAlBR,EAmBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAnBR,EAwBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAxBR,EAyBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAD,CAFP;AAGLI,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAzBR,EA8BEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CA9BR,CAjGmB,EAiInB,CACEQ,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CADR,EAEEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAE,IAFF;AAGLC,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAFR,EAOEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAPR,EAQEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAE,IAFF;AAGLC,EAAAA,KAAK,EAAEL;AAHF,CAAD,CARR,EAaEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAbR,EAcEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAE,IAFF;AAGLC,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAdR,EAmBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAnBR,EAoBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAE,IAFF;AAGLC,EAAAA,KAAK,EAAEL;AAHF,CAAD,CApBR,EAyBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAzBR,EA0BEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAE,IAFF;AAGLC,EAAAA,KAAK,EAAEL;AAHF,CAAD,CA1BR,CAjImB,EAiKnB,CACEO,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAE,IAFF;AAGLC,EAAAA,KAAK,EAAEL;AAHF,CAAD,CADR,EAMEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CANR,EAOEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAE,IAFF;AAGLC,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAPR,EAYEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAZR,EAaEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAE,IAFF;AAGLC,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAbR,EAkBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAlBR,EAmBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAE,IAFF;AAGLC,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAnBR,EAwBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAxBR,EAyBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAE,IAFF;AAGLC,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAzBR,EA8BEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CA9BR,CAjKmB,EAiMnB,CACEQ,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CADR,EAEEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAFR,EAOEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAPR,EAQEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CARR,EAaEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAbR,EAcEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAdR,EAmBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAnBR,EAoBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CApBR,EAyBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAzBR,EA0BEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CA1BR,CAjMmB,EAiOnB,CACEO,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CADR,EAMEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CANR,EAOEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAPR,EAYEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAZR,EAaEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAbR,EAkBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAlBR,EAmBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAnBR,EAwBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAxBR,EAyBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAzBR,EA8BEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CA9BR,CAjOmB,EAiQnB,CACEQ,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CADR,EAEEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAFR,EAOEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAPR,EAQEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CARR,EAaEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAbR,EAcEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAdR,EAmBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAnBR,EAoBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CApBR,EAyBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAzBR,EA0BEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CA1BR,CAjQmB,EAiSnB,CACEO,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CADR,EAMEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CANR,EAOEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAPR,EAYEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAZR,EAaEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAbR,EAkBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAlBR,EAmBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAnBR,EAwBEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CAxBR,EAyBEQ,MAAM,CAAC;AACLC,EAAAA,EAAE,EAAE,EADC;AAELJ,EAAAA,KAAK,EAAEA,KAAK,CAAC;AAAEC,IAAAA,KAAK,EAAEH;AAAT,GAAD,CAFP;AAGLG,EAAAA,KAAK,EAAEL;AAHF,CAAD,CAzBR,EA8BEO,MAAM,CAAC;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYJ,EAAAA,KAAK,EAAE,IAAnB;AAAyBC,EAAAA,KAAK,EAAEN;AAAhC,CAAD,CA9BR,CAjSmB,CAAd;;AAmUP,SAASW,aAAT,CAAuB;AAAED,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAvB,EAA0C;AACxC,MAAII,WAAW,GAAG,IAAlB;AAEAF,EAAAA,KAAK,CAACG,OAAN,CAAeC,GAAD,IACZA,GAAG,CAACD,OAAJ,CAAaE,EAAD,IAAQ;AAClB,QAAIA,EAAE,IAAIA,EAAE,CAACN,EAAT,IAAeM,EAAE,CAACN,EAAH,KAAUD,MAAM,CAACC,EAApC,EAAwC;AACtCG,MAAAA,WAAW,GAAG;AACZE,QAAAA,GAAG,EAAEJ,KAAK,CAACM,OAAN,CAAcF,GAAd,CADO;AAEZG,QAAAA,KAAK,EAAEH,GAAG,CAACE,OAAJ,CAAYD,EAAZ,CAFK;AAGZV,QAAAA,KAAK,EAAEU,EAAE,CAACV,KAHE;AAIZI,QAAAA,EAAE,EAAEM,EAAE,CAACN;AAJK,OAAd;AAMD;AACF,GATD,CADF;AAaA,SAAOG,WAAP;AACD;;AAED,SAASM,SAAT,CAAmB;AAAER,EAAAA;AAAF,CAAnB,EAA8B;AAC5B,QAAMS,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeZ,KAAf,CAAX,EAAkCa,GAAlC,CAAuCT,GAAD,IAAS;AAC9D,WAAOA,GAAG,CAACS,GAAJ,CAASR,EAAD,IAAQ;AACrB,UAAIA,EAAE,CAACT,KAAH,KAAaF,cAAjB,EAAiC;AAC/BW,QAAAA,EAAE,CAACT,KAAH,GAAWL,iBAAX;AACD;;AACD,aAAOc,EAAP;AACD,KALM,CAAP;AAMD,GAPgB,CAAjB;AAQA,SAAOI,QAAP;AACD,C,CAED;;;AACA,OAAO,SAASK,YAAT,CAAsB;AAAEd,EAAAA,KAAF;AAASF,EAAAA;AAAT,CAAtB,EAAyC;AAC9C,QAAMW,QAAQ,GAAGD,SAAS,CAAC;AAAER,IAAAA;AAAF,GAAD,CAA1B;AACA,QAAMe,UAAU,GAAGd,aAAa,CAAC;AAAED,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAD,CAAhC,CAF8C,CAI9C;;AACA,MAAIA,MAAM,CAACH,KAAP,CAAaE,KAAjB,EAAwB;AACtB,WAAOmB,iBAAiB,EAAxB;AACD,GAP6C,CAQ9C;;;AACA,MAAIlB,MAAM,CAACH,KAAP,CAAaC,KAAb,KAAuBH,YAA3B,EAAyC;AACvC,WAAOwB,iBAAiB,CAAC;AAAEF,MAAAA,UAAF;AAAcf,MAAAA,KAAK,EAAES;AAArB,KAAD,CAAxB;AACD,GAX6C,CAa9C;;;AACA,SAAOS,gBAAgB,CAAC;AAAEH,IAAAA,UAAF;AAAcf,IAAAA,KAAK,EAAES;AAArB,GAAD,CAAvB;AACD;;AAED,SAASU,gBAAT,CAA0B;AAAEnB,EAAAA,KAAF;AAASF,EAAAA,MAAT;AAAiBsB,EAAAA;AAAjB,CAA1B,EAAwD;AACtD,QAAML,UAAU,GAAGd,aAAa,CAAC;AAAED,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAD,CAAhC;;AAEA,MAAIsB,SAAS,KAAK,MAAlB,EAA0B;AACxB,QAAIL,UAAU,CAACR,KAAX,KAAqB,CAAzB,EAA4B;AAC1B,aAAO,KAAP;AACD;;AACD,QAAI,CAACP,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,EAAgDZ,KAArD,EAA4D;AAC1D,aAAO,IAAP;AACD;AACF,GAPD,MAOO;AACL,QAAIoB,UAAU,CAACR,KAAX,KAAqB,CAAzB,EAA4B;AAC1B,aAAO,KAAP;AACD;;AACD,QAAI,CAACP,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,EAAgDZ,KAArD,EAA4D;AAC1D,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAED,SAAS0B,eAAT,CAAyB;AAAErB,EAAAA,KAAF;AAASF,EAAAA,MAAT;AAAiBsB,EAAAA;AAAjB,CAAzB,EAAuD;AACrD,QAAML,UAAU,GAAGd,aAAa,CAAC;AAAED,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAD,CAAhC;;AACA,MAAIsB,SAAS,KAAK,MAAlB,EAA0B;AACxB,QAAIL,UAAU,CAACR,KAAX,KAAqB,CAAzB,EAA4B;AAC1B,aAAO,KAAP;AACD;;AACD,QAAI,CAACP,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,EAAgDZ,KAArD,EAA4D;AAC1D,aAAO,IAAP;AACD;AACF,GAPD,MAOO;AACL,QAAIoB,UAAU,CAACR,KAAX,KAAqB,CAAzB,EAA4B;AAC1B,aAAO,KAAP;AACD;;AACD,QAAI,CAACP,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,EAAgDZ,KAArD,EAA4D;AAC1D,aAAO,IAAP;AACD;AACF;;AACD,SAAO,KAAP;AACD;;AAED,SAASsB,iBAAT,CAA2B;AAAEjB,EAAAA,KAAF;AAASe,EAAAA;AAAT,CAA3B,EAAkD;AAChD;AACA;AACA,MAAIA,UAAU,CAACR,KAAX,KAAqB,CAAzB,EAA4B;AAC1B,UAAMe,IAAI,GAAGtB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAb;;AACA,QAAIe,IAAI,IAAIA,IAAI,CAAC3B,KAAb,IAAsB2B,IAAI,CAAC3B,KAAL,CAAWC,KAAX,KAAqBH,YAA/C,EAA6D;AAC3D,aAAOO,KAAP;AACD;;AACD,QAAIsB,IAAI,IAAIA,IAAI,CAAC3B,KAAb,IAAsB2B,IAAI,CAAC3B,KAAL,CAAWC,KAAX,KAAqBH,YAA/C,EAA6D;AAC3D,UAAI0B,gBAAgB,CAAC;AAAEnB,QAAAA,KAAF;AAASF,QAAAA,MAAM,EAAEwB,IAAjB;AAAuBF,QAAAA,SAAS,EAAE;AAAlC,OAAD,CAApB,EAAkE;AAChE,cAAMG,QAAQ,GAAGvB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAjB;AACAgB,QAAAA,QAAQ,CAAC3B,KAAT,GAAiBF,cAAjB;AACA,eAAOM,KAAP;AACD,OAJD,MAIO;AACL,eAAOA,KAAP;AACD;AACF;;AAEDsB,IAAAA,IAAI,CAAC1B,KAAL,GAAaF,cAAb;AACA,WAAOM,KAAP;AACD,GApB+C,CAqBhD;;;AACA,MAAIe,UAAU,CAACR,KAAX,KAAqB,CAAzB,EAA4B;AAC1B,UAAMiB,KAAK,GAAGxB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAd;;AACA,QAAIiB,KAAK,IAAIA,KAAK,CAAC7B,KAAf,IAAwB6B,KAAK,CAAC7B,KAAN,CAAYC,KAAZ,KAAsBH,YAAlD,EAAgE;AAC9D,aAAOO,KAAP;AACD;;AACD,QAAIwB,KAAK,IAAIA,KAAK,CAAC7B,KAAf,IAAwB6B,KAAK,CAAC7B,KAAN,CAAYC,KAAZ,KAAsBH,YAAlD,EAAgE;AAC9D,UAAI0B,gBAAgB,CAAC;AAAEnB,QAAAA,KAAF;AAASF,QAAAA,MAAM,EAAE0B,KAAjB;AAAwBJ,QAAAA,SAAS,EAAE;AAAnC,OAAD,CAApB,EAAoE;AAClE,cAAMK,SAAS,GAAGzB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAlB;AACAkB,QAAAA,SAAS,CAAC7B,KAAV,GAAkBF,cAAlB;AACA,eAAOM,KAAP;AACD,OAJD,MAIO;AACL,eAAOA,KAAP;AACD;AACF;;AAEDwB,IAAAA,KAAK,CAAC5B,KAAN,GAAcF,cAAd;AACA,WAAOM,KAAP;AACD,GAvC+C,CAwChD;;;AACA,QAAM0B,MAAM,GAAG;AAAEJ,IAAAA,IAAI,EAAE,IAAR;AAAcE,IAAAA,KAAK,EAAE;AAArB,GAAf,CAzCgD,CA2ChD;;AACA,QAAMF,IAAI,GAAGtB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAb;;AACA,MAAIe,IAAI,IAAIA,IAAI,CAAC3B,KAAb,IAAsB2B,IAAI,CAAC3B,KAAL,CAAWC,KAAX,KAAqBH,YAA/C,EAA6D;AAC3DiC,IAAAA,MAAM,CAACJ,IAAP,GAAc,KAAd;AACD;;AACD,MAAIA,IAAI,IAAIA,IAAI,CAAC3B,KAAb,IAAsB2B,IAAI,CAAC3B,KAAL,CAAWC,KAAX,KAAqBH,YAA/C,EAA6D;AAC3D,QAAI0B,gBAAgB,CAAC;AAAEnB,MAAAA,KAAF;AAASF,MAAAA,MAAM,EAAEwB,IAAjB;AAAuBF,MAAAA,SAAS,EAAE;AAAlC,KAAD,CAApB,EAAkE;AAChE,YAAMG,QAAQ,GAAGvB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAjB;AACAgB,MAAAA,QAAQ,CAAC3B,KAAT,GAAiBF,cAAjB;AACA,aAAOM,KAAP;AACD,KAJD,MAIO;AACL0B,MAAAA,MAAM,CAACJ,IAAP,GAAc,KAAd;AACD;AACF,GAxD+C,CA0DhD;;;AACA,QAAME,KAAK,GAAGxB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAd;;AACA,MAAIiB,KAAK,IAAIA,KAAK,CAAC7B,KAAf,IAAwB6B,KAAK,CAAC7B,KAAN,CAAYC,KAAZ,KAAsBH,YAAlD,EAAgE;AAC9DiC,IAAAA,MAAM,CAACF,KAAP,GAAe,KAAf;AACD;;AACD,MAAIA,KAAK,IAAIA,KAAK,CAAC7B,KAAf,IAAwB6B,KAAK,CAAC7B,KAAN,CAAYC,KAAZ,KAAsBH,YAAlD,EAAgE;AAC9D,QAAI0B,gBAAgB,CAAC;AAAEnB,MAAAA,KAAF;AAASF,MAAAA,MAAM,EAAE0B,KAAjB;AAAwBJ,MAAAA,SAAS,EAAE;AAAnC,KAAD,CAApB,EAAoE;AAClE,YAAMK,SAAS,GAAGzB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAlB;AACAkB,MAAAA,SAAS,CAAC7B,KAAV,GAAkBF,cAAlB;AACA,aAAOM,KAAP;AACD,KAJD,MAIO;AACL0B,MAAAA,MAAM,CAACF,KAAP,GAAe,KAAf;AACD;AACF;;AAED,MAAIE,MAAM,CAACF,KAAX,EAAkB;AAChBA,IAAAA,KAAK,CAAC5B,KAAN,GAAcF,cAAd;AACD;;AACD,MAAIgC,MAAM,CAACJ,IAAX,EAAiB;AACfA,IAAAA,IAAI,CAAC1B,KAAL,GAAaF,cAAb;AACD;;AAED,SAAOM,KAAP;AACD;;AAED,SAASkB,gBAAT,CAA0B;AAAElB,EAAAA,KAAF;AAASe,EAAAA;AAAT,CAA1B,EAAiD;AAC/C;AACA;AACA,MAAIA,UAAU,CAACR,KAAX,KAAqB,CAAzB,EAA4B;AAC1B,UAAMiB,KAAK,GAAGxB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAd;;AACA,QAAIiB,KAAK,IAAIA,KAAK,CAAC7B,KAAf,IAAwB6B,KAAK,CAAC7B,KAAN,CAAYC,KAAZ,KAAsBJ,WAAlD,EAA+D;AAC7D,aAAOQ,KAAP;AACD;;AACD,QAAIwB,KAAK,IAAIA,KAAK,CAAC7B,KAAf,IAAwB6B,KAAK,CAAC7B,KAAN,CAAYC,KAAZ,KAAsBJ,WAAlD,EAA+D;AAC7D,UAAI6B,eAAe,CAAC;AAAErB,QAAAA,KAAF;AAASF,QAAAA,MAAM,EAAE0B,KAAjB;AAAwBJ,QAAAA,SAAS,EAAE;AAAnC,OAAD,CAAnB,EAAmE;AACjE,cAAMK,SAAS,GAAGzB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAlB;AACAkB,QAAAA,SAAS,CAAC7B,KAAV,GAAkBF,cAAlB;AACA,eAAOM,KAAP;AACD,OAJD,MAIO;AACL,eAAOA,KAAP;AACD;AACF;;AAEDwB,IAAAA,KAAK,CAAC5B,KAAN,GAAcF,cAAd;AACA,WAAOM,KAAP;AACD,GApB8C,CAqB/C;;;AACA,MAAIe,UAAU,CAACR,KAAX,KAAqB,CAAzB,EAA4B;AAC1B,UAAMe,IAAI,GAAGtB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAb;;AACA,QAAIe,IAAI,IAAIA,IAAI,CAAC3B,KAAb,IAAsB2B,IAAI,CAAC3B,KAAL,CAAWC,KAAX,KAAqBJ,WAA/C,EAA4D;AAC1D,aAAOQ,KAAP;AACD;;AACD,QAAIsB,IAAI,IAAIA,IAAI,CAAC3B,KAAb,IAAsB2B,IAAI,CAAC3B,KAAL,CAAWC,KAAX,KAAqBJ,WAA/C,EAA4D;AAC1D,UAAI6B,eAAe,CAAC;AAAErB,QAAAA,KAAF;AAASF,QAAAA,MAAM,EAAEwB,IAAjB;AAAuBF,QAAAA,SAAS,EAAE;AAAlC,OAAD,CAAnB,EAAiE;AAC/D,cAAMO,QAAQ,GAAG3B,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAjB;AACAoB,QAAAA,QAAQ,CAAC/B,KAAT,GAAiBF,cAAjB;AACA,eAAOM,KAAP;AACD,OAJD,MAIO;AACL,eAAOA,KAAP;AACD;AACF;;AAEDsB,IAAAA,IAAI,CAAC1B,KAAL,GAAaF,cAAb;AACA,WAAOM,KAAP;AACD,GAvC8C,CAwC/C;;;AACA,QAAM0B,MAAM,GAAG;AAAEJ,IAAAA,IAAI,EAAE,IAAR;AAAcE,IAAAA,KAAK,EAAE;AAArB,GAAf,CAzC+C,CA2C/C;;AACA,QAAMA,KAAK,GAAGxB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAd;;AACA,MAAIiB,KAAK,IAAIA,KAAK,CAAC7B,KAAf,IAAwB6B,KAAK,CAAC7B,KAAN,CAAYC,KAAZ,KAAsBJ,WAAlD,EAA+D;AAC7DkC,IAAAA,MAAM,CAACF,KAAP,GAAe,KAAf;AACD;;AACD,MAAIA,KAAK,IAAIA,KAAK,CAAC7B,KAAf,IAAwB6B,KAAK,CAAC7B,KAAN,CAAYC,KAAZ,KAAsBJ,WAAlD,EAA+D;AAC7D,QAAI6B,eAAe,CAAC;AAAErB,MAAAA,KAAF;AAASF,MAAAA,MAAM,EAAE0B,KAAjB;AAAwBJ,MAAAA,SAAS,EAAE;AAAnC,KAAD,CAAnB,EAAmE;AACjE,YAAMQ,SAAS,GAAG5B,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAlB;AACAqB,MAAAA,SAAS,CAAChC,KAAV,GAAkBF,cAAlB;AACA,aAAOM,KAAP;AACD,KAJD,MAIO;AACL0B,MAAAA,MAAM,CAACF,KAAP,GAAe,KAAf;AACD;AACF,GAxD8C,CA0D/C;;;AACA,QAAMF,IAAI,GAAGtB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAb;;AACA,MAAIe,IAAI,CAAC3B,KAAL,IAAc2B,IAAI,CAAC3B,KAAL,CAAWC,KAAX,KAAqBJ,WAAvC,EAAoD;AAClDkC,IAAAA,MAAM,CAACJ,IAAP,GAAc,KAAd;AACD;;AACD,MAAIA,IAAI,CAAC3B,KAAL,IAAc2B,IAAI,CAAC3B,KAAL,CAAWC,KAAX,KAAqBJ,WAAvC,EAAoD;AAClD,QAAI6B,eAAe,CAAC;AAAErB,MAAAA,KAAF;AAASF,MAAAA,MAAM,EAAEwB,IAAjB;AAAuBF,MAAAA,SAAS,EAAE;AAAlC,KAAD,CAAnB,EAAiE;AAC/D,YAAMK,SAAS,GAAGzB,KAAK,CAACe,UAAU,CAACX,GAAX,GAAiB,CAAlB,CAAL,CAA0BW,UAAU,CAACR,KAAX,GAAmB,CAA7C,CAAlB;AACAkB,MAAAA,SAAS,CAAC7B,KAAV,GAAkBF,cAAlB;AACA,aAAOM,KAAP;AACD,KAJD,MAIO;AACL0B,MAAAA,MAAM,CAACJ,IAAP,GAAc,KAAd;AACD;AACF;;AAED,MAAII,MAAM,CAACF,KAAX,EAAkB;AAChBA,IAAAA,KAAK,CAAC5B,KAAN,GAAcF,cAAd;AACD;;AACD,MAAIgC,MAAM,CAACJ,IAAX,EAAiB;AACfA,IAAAA,IAAI,CAAC1B,KAAL,GAAaF,cAAb;AACD;;AAED,SAAOM,KAAP;AACD;;AAED,SAASgB,iBAAT,GAA6B,CAAE;;AAE/B,OAAO,SAASa,SAAT,CAAmB;AAAE7B,EAAAA,KAAF;AAASF,EAAAA,MAAT;AAAiBgC,EAAAA;AAAjB,CAAnB,EAAgD;AACrD,MAAIhC,MAAM,CAACF,KAAP,KAAiBF,cAArB,EAAqC;AAErC,QAAMqC,YAAY,GAAG9B,aAAa,CAAC;AAAED,IAAAA,KAAF;AAASF,IAAAA,MAAM,EAAEgC;AAAjB,GAAD,CAAlC;AACA,QAAMf,UAAU,GAAGd,aAAa,CAAC;AAAED,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAAD,CAAhC;AAEA,QAAMW,QAAQ,GAAGD,SAAS,CAAC;AAAER,IAAAA;AAAF,GAAD,CAA1B,CANqD,CAQrD;;AACAS,EAAAA,QAAQ,CAACM,UAAU,CAACX,GAAZ,CAAR,CAAyBW,UAAU,CAACR,KAApC,EAA2CZ,KAA3C,GAAmDmC,QAAQ,CAACnC,KAA5D,CATqD,CAWrD;;AACAc,EAAAA,QAAQ,CAACsB,YAAY,CAAC3B,GAAd,CAAR,CAA2B2B,YAAY,CAACxB,KAAxC,EAA+CZ,KAA/C,GAAuD,IAAvD,CAZqD,CAcrD;;AACA,MAAIoC,YAAY,CAAC3B,GAAb,GAAmBW,UAAU,CAACX,GAA9B,KAAsC,CAA1C,EAA6C;AAC3C4B,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,QAAIlB,UAAU,CAACR,KAAX,GAAmBuB,QAAQ,CAACvB,KAAhC,EAAuC;AACrCyB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADqC,CAErC;;AACAxB,MAAAA,QAAQ,CAACsB,YAAY,CAAC3B,GAAb,GAAmB,CAApB,CAAR,CAA+B2B,YAAY,CAACxB,KAAb,GAAqB,CAApD,EAAuDZ,KAAvD,GAA+D,IAA/D;AACD,KAJD,MAIO;AACL;AACAc,MAAAA,QAAQ,CAACsB,YAAY,CAAC3B,GAAb,GAAmB,CAApB,CAAR,CAA+B2B,YAAY,CAACxB,KAAb,GAAqB,CAApD,EAAuDZ,KAAvD,GAA+D,IAA/D;AACD;AACF;;AAED,SAAOc,QAAP;AACD","sourcesContent":["import { darken } from 'polished';\nimport { FaCrown } from 'react-icons/fa';\n\nconst squareColorLighter = 'rgb(212,198,159)';\nconst squareColorDarker = 'rgb(142,108,80)';\n\nconst pieceDarker = 'rgb(82,57,47)';\nconst pieceLighter = 'rgb(230,183,79)';\n\nconst squareSelected = darken(0.2, squareColorDarker);\n\nfunction piece({ color }) {\n  return {\n    color: color === pieceDarker ? pieceDarker : pieceLighter,\n    queen: false,\n  };\n}\n\nfunction square({ id, piece, color }) {\n  return {\n    id,\n    piece,\n    color: color === squareColorDarker ? squareColorDarker : squareColorLighter,\n  };\n}\n\nexport const board = [\n  [\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 1,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 2,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 3,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 4,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 5,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n  ],\n  [\n    square({\n      id: 6,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 7,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 8,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 9,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 10,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n  ],\n  [\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 11,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 12,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 13,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 14,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 15,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n  ],\n  [\n    square({\n      id: 16,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 17,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 18,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 19,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 20,\n      piece: piece({ color: pieceDarker }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n  ],\n  [\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 21,\n      piece: null,\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 22,\n      piece: null,\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 23,\n      piece: null,\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 24,\n      piece: null,\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 25,\n      piece: null,\n      color: squareColorDarker,\n    }),\n  ],\n  [\n    square({\n      id: 26,\n      piece: null,\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 27,\n      piece: null,\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 28,\n      piece: null,\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 29,\n      piece: null,\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 30,\n      piece: null,\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n  ],\n  [\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 31,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 32,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 33,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 34,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 35,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n  ],\n  [\n    square({\n      id: 36,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 37,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 38,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 39,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 40,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n  ],\n  [\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 41,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 42,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 43,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 44,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 45,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n  ],\n  [\n    square({\n      id: 46,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 47,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 48,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 49,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n    square({\n      id: 50,\n      piece: piece({ color: pieceLighter }),\n      color: squareColorDarker,\n    }),\n    square({ id: null, piece: null, color: squareColorLighter }),\n  ],\n];\n\nfunction getSquareInfo({ board, square }) {\n  let indexSquare = null;\n\n  board.forEach((row) =>\n    row.forEach((sq) => {\n      if (sq && sq.id && sq.id === square.id) {\n        indexSquare = {\n          row: board.indexOf(row),\n          index: row.indexOf(sq),\n          piece: sq.piece,\n          id: sq.id,\n        };\n      }\n    })\n  );\n\n  return indexSquare;\n}\n\nfunction copyBoard({ board }) {\n  const newBoard = JSON.parse(JSON.stringify(board)).map((row) => {\n    return row.map((sq) => {\n      if (sq.color === squareSelected) {\n        sq.color = squareColorDarker;\n      }\n      return sq;\n    });\n  });\n  return newBoard;\n}\n\n// mostra os movimentos possíveis da peça\nexport function showMovement({ board, square }) {\n  const newBoard = copyBoard({ board });\n  const squareInfo = getSquareInfo({ board, square });\n\n  // se ele é rainha\n  if (square.piece.queen) {\n    return showMovementQueen();\n  }\n  // se ele é branco\n  if (square.piece.color === pieceLighter) {\n    return showMovementLight({ squareInfo, board: newBoard });\n  }\n\n  // se ele é preto\n  return showMovementDark({ squareInfo, board: newBoard });\n}\n\nfunction checkEatingLight({ board, square, direction }) {\n  const squareInfo = getSquareInfo({ board, square });\n\n  if (direction === 'left') {\n    if (squareInfo.index === 0) {\n      return false;\n    }\n    if (!board[squareInfo.row - 1][squareInfo.index - 1].piece) {\n      return true;\n    }\n  } else {\n    if (squareInfo.index === 9) {\n      return false;\n    }\n    if (!board[squareInfo.row - 1][squareInfo.index + 1].piece) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction checkEatingDark({ board, square, direction }) {\n  const squareInfo = getSquareInfo({ board, square });\n  if (direction === 'left') {\n    if (squareInfo.index === 9) {\n      return false;\n    }\n    if (!board[squareInfo.row + 1][squareInfo.index + 1].piece) {\n      return true;\n    }\n  } else {\n    if (squareInfo.index === 0) {\n      return false;\n    }\n    if (!board[squareInfo.row + 1][squareInfo.index - 1].piece) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction showMovementLight({ board, squareInfo }) {\n  // se ele tiver na posicao 0 ele nao anda mais e vira rainha\n  // se for 9 só pode mover pra esquerda\n  if (squareInfo.index === 9) {\n    const left = board[squareInfo.row - 1][squareInfo.index - 1];\n    if (left && left.piece && left.piece.color === pieceLighter) {\n      return board;\n    }\n    if (left && left.piece && left.piece.color !== pieceLighter) {\n      if (checkEatingLight({ board, square: left, direction: 'left' })) {\n        const nextLeft = board[squareInfo.row - 2][squareInfo.index - 2];\n        nextLeft.color = squareSelected;\n        return board;\n      } else {\n        return board;\n      }\n    }\n\n    left.color = squareSelected;\n    return board;\n  }\n  // se for 0 só pode mover pra direita\n  if (squareInfo.index === 0) {\n    const right = board[squareInfo.row - 1][squareInfo.index + 1];\n    if (right && right.piece && right.piece.color === pieceLighter) {\n      return board;\n    }\n    if (right && right.piece && right.piece.color !== pieceLighter) {\n      if (checkEatingLight({ board, square: right, direction: 'right' })) {\n        const nextRight = board[squareInfo.row - 2][squareInfo.index + 2];\n        nextRight.color = squareSelected;\n        return board;\n      } else {\n        return board;\n      }\n    }\n\n    right.color = squareSelected;\n    return board;\n  }\n  // pode mover para os dois lados\n  const verify = { left: true, right: true };\n\n  // left\n  const left = board[squareInfo.row - 1][squareInfo.index - 1];\n  if (left && left.piece && left.piece.color === pieceLighter) {\n    verify.left = false;\n  }\n  if (left && left.piece && left.piece.color !== pieceLighter) {\n    if (checkEatingLight({ board, square: left, direction: 'left' })) {\n      const nextLeft = board[squareInfo.row - 2][squareInfo.index - 2];\n      nextLeft.color = squareSelected;\n      return board;\n    } else {\n      verify.left = false;\n    }\n  }\n\n  // right\n  const right = board[squareInfo.row - 1][squareInfo.index + 1];\n  if (right && right.piece && right.piece.color === pieceLighter) {\n    verify.right = false;\n  }\n  if (right && right.piece && right.piece.color !== pieceLighter) {\n    if (checkEatingLight({ board, square: right, direction: 'right' })) {\n      const nextRight = board[squareInfo.row - 2][squareInfo.index + 2];\n      nextRight.color = squareSelected;\n      return board;\n    } else {\n      verify.right = false;\n    }\n  }\n\n  if (verify.right) {\n    right.color = squareSelected;\n  }\n  if (verify.left) {\n    left.color = squareSelected;\n  }\n\n  return board;\n}\n\nfunction showMovementDark({ board, squareInfo }) {\n  // se ele tiver na posicao 0 ele nao anda mais e vira rainha\n  // se for 9 só pode mover pra esquerda\n  if (squareInfo.index === 9) {\n    const right = board[squareInfo.row + 1][squareInfo.index - 1];\n    if (right && right.piece && right.piece.color === pieceDarker) {\n      return board;\n    }\n    if (right && right.piece && right.piece.color !== pieceDarker) {\n      if (checkEatingDark({ board, square: right, direction: 'right' })) {\n        const nextRight = board[squareInfo.row + 2][squareInfo.index - 2];\n        nextRight.color = squareSelected;\n        return board;\n      } else {\n        return board;\n      }\n    }\n\n    right.color = squareSelected;\n    return board;\n  }\n  // se for 0 só pode mover pra direita\n  if (squareInfo.index === 0) {\n    const left = board[squareInfo.row + 1][squareInfo.index + 1];\n    if (left && left.piece && left.piece.color === pieceDarker) {\n      return board;\n    }\n    if (left && left.piece && left.piece.color !== pieceDarker) {\n      if (checkEatingDark({ board, square: left, direction: 'left' })) {\n        const nextleft = board[squareInfo.row + 2][squareInfo.index + 2];\n        nextleft.color = squareSelected;\n        return board;\n      } else {\n        return board;\n      }\n    }\n\n    left.color = squareSelected;\n    return board;\n  }\n  // pode mover para os dois lados\n  const verify = { left: true, right: true };\n\n  // left\n  const right = board[squareInfo.row + 1][squareInfo.index - 1];\n  if (right && right.piece && right.piece.color === pieceDarker) {\n    verify.right = false;\n  }\n  if (right && right.piece && right.piece.color !== pieceDarker) {\n    if (checkEatingDark({ board, square: right, direction: 'right' })) {\n      const nextright = board[squareInfo.row + 2][squareInfo.index - 2];\n      nextright.color = squareSelected;\n      return board;\n    } else {\n      verify.right = false;\n    }\n  }\n\n  // right\n  const left = board[squareInfo.row + 1][squareInfo.index + 1];\n  if (left.piece && left.piece.color === pieceDarker) {\n    verify.left = false;\n  }\n  if (left.piece && left.piece.color !== pieceDarker) {\n    if (checkEatingDark({ board, square: left, direction: 'left' })) {\n      const nextRight = board[squareInfo.row + 2][squareInfo.index + 2];\n      nextRight.color = squareSelected;\n      return board;\n    } else {\n      verify.left = false;\n    }\n  }\n\n  if (verify.right) {\n    right.color = squareSelected;\n  }\n  if (verify.left) {\n    left.color = squareSelected;\n  }\n\n  return board;\n}\n\nfunction showMovementQueen() {}\n\nexport function movePiece({ board, square, selected }) {\n  if (square.color !== squareSelected) return;\n\n  const selectedInfo = getSquareInfo({ board, square: selected });\n  const squareInfo = getSquareInfo({ board, square });\n\n  const newBoard = copyBoard({ board });\n\n  // add\n  newBoard[squareInfo.row][squareInfo.index].piece = selected.piece;\n\n  // remove\n  newBoard[selectedInfo.row][selectedInfo.index].piece = null;\n\n  // branco\n  if (selectedInfo.row - squareInfo.row === 2) {\n    console.log('oi');\n    if (squareInfo.index > selected.index) {\n      console.log('oiaaaa');\n      //right\n      newBoard[selectedInfo.row - 1][selectedInfo.index + 1].piece = null;\n    } else {\n      //left\n      newBoard[selectedInfo.row - 1][selectedInfo.index - 1].piece = null;\n    }\n  }\n\n  return newBoard;\n}\n"]},"metadata":{},"sourceType":"module"}