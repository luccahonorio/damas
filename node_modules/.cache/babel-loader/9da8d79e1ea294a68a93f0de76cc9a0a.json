{"ast":null,"code":"import { pieceDarker, pieceLighter, squareDarker, squareLighter } from '../store/modules/board/recucer';\n\nfunction handleGetIndex({\n  board,\n  square\n}) {\n  let indexSquare = null;\n  board.forEach(row => row.forEach(sq => {\n    if (sq && sq.id && sq.id === square.id) {\n      indexSquare = {\n        row: board.indexOf(row),\n        index: row.indexOf(sq),\n        color: sq.piece\n      };\n    }\n  }));\n  return indexSquare;\n} // Handle if the peace can move foward\n\n\nexport function handlePositionPiece({\n  board,\n  square\n}) {\n  const squareIndex = handleGetIndex(square);\n\n  if (squareIndex.index === 9) {}\n\n  if (squareIndex.index === 0) {}\n}","map":{"version":3,"sources":["/Users/henriqueolivoantonio/Desktop/Projects/damas/src/logic/index.js"],"names":["pieceDarker","pieceLighter","squareDarker","squareLighter","handleGetIndex","board","square","indexSquare","forEach","row","sq","id","indexOf","index","color","piece","handlePositionPiece","squareIndex"],"mappings":"AAAA,SACEA,WADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,aAJF,QAKO,gCALP;;AAOA,SAASC,cAAT,CAAwB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAxB,EAA2C;AACzC,MAAIC,WAAW,GAAG,IAAlB;AAEAF,EAAAA,KAAK,CAACG,OAAN,CAAeC,GAAD,IACZA,GAAG,CAACD,OAAJ,CAAaE,EAAD,IAAQ;AAClB,QAAIA,EAAE,IAAIA,EAAE,CAACC,EAAT,IAAeD,EAAE,CAACC,EAAH,KAAUL,MAAM,CAACK,EAApC,EAAwC;AACtCJ,MAAAA,WAAW,GAAG;AACZE,QAAAA,GAAG,EAAEJ,KAAK,CAACO,OAAN,CAAcH,GAAd,CADO;AAEZI,QAAAA,KAAK,EAAEJ,GAAG,CAACG,OAAJ,CAAYF,EAAZ,CAFK;AAGZI,QAAAA,KAAK,EAAEJ,EAAE,CAACK;AAHE,OAAd;AAKD;AACF,GARD,CADF;AAYA,SAAOR,WAAP;AACD,C,CACD;;;AACA,OAAO,SAASS,mBAAT,CAA6B;AAAEX,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAA7B,EAAgD;AACrD,QAAMW,WAAW,GAAGb,cAAc,CAACE,MAAD,CAAlC;;AAEA,MAAIW,WAAW,CAACJ,KAAZ,KAAsB,CAA1B,EAA6B,CAC5B;;AAED,MAAII,WAAW,CAACJ,KAAZ,KAAsB,CAA1B,EAA6B,CAC5B;AACF","sourcesContent":["import {\n  pieceDarker,\n  pieceLighter,\n  squareDarker,\n  squareLighter,\n} from '../store/modules/board/recucer';\n\nfunction handleGetIndex({ board, square }) {\n  let indexSquare = null;\n\n  board.forEach((row) =>\n    row.forEach((sq) => {\n      if (sq && sq.id && sq.id === square.id) {\n        indexSquare = {\n          row: board.indexOf(row),\n          index: row.indexOf(sq),\n          color: sq.piece,\n        };\n      }\n    })\n  );\n\n  return indexSquare;\n}\n// Handle if the peace can move foward\nexport function handlePositionPiece({ board, square }) {\n  const squareIndex = handleGetIndex(square);\n\n  if (squareIndex.index === 9) {\n  }\n\n  if (squareIndex.index === 0) {\n  }\n}\n"]},"metadata":{},"sourceType":"module"}