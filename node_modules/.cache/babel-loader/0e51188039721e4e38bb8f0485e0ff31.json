{"ast":null,"code":"import { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport persistReducers from './persistReducers';\nimport createstore from './createStore';\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\nconst sagaMonitor = process.env.NODE_ENV === 'development' ? console.tron.createSagaMonitor() : null;\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor\n});\nconst middlewares = [sagaMiddleware];\nconst store = createstore(persistReducers(rootReducer), middlewares);\nconst persistor = persistStore(store);\nsagaMiddleware.run(rootSaga);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/henriqueolivoantonio/Desktop/Projects/damas/src/store/index.js"],"names":["persistStore","createSagaMiddleware","persistReducers","createstore","rootReducer","rootSaga","sagaMonitor","process","env","NODE_ENV","console","tron","createSagaMonitor","sagaMiddleware","middlewares","store","persistor","run"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,MAAMC,WAAW,GACfC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACIC,OAAO,CAACC,IAAR,CAAaC,iBAAb,EADJ,GAEI,IAHN;AAKA,MAAMC,cAAc,GAAGZ,oBAAoB,CAAC;AAAEK,EAAAA;AAAF,CAAD,CAA3C;AAEA,MAAMQ,WAAW,GAAG,CAACD,cAAD,CAApB;AAEA,MAAME,KAAK,GAAGZ,WAAW,CAACD,eAAe,CAACE,WAAD,CAAhB,EAA+BU,WAA/B,CAAzB;AACA,MAAME,SAAS,GAAGhB,YAAY,CAACe,KAAD,CAA9B;AAEAF,cAAc,CAACI,GAAf,CAAmBZ,QAAnB;AAEA,SAASU,KAAT,EAAgBC,SAAhB","sourcesContent":["import { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\n\nimport persistReducers from './persistReducers';\nimport createstore from './createStore';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor =\n  process.env.NODE_ENV === 'development'\n    ? console.tron.createSagaMonitor()\n    : null;\n\nconst sagaMiddleware = createSagaMiddleware({ sagaMonitor });\n\nconst middlewares = [sagaMiddleware];\n\nconst store = createstore(persistReducers(rootReducer), middlewares);\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nexport { store, persistor };\n"]},"metadata":{},"sourceType":"module"}