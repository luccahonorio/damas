{"ast":null,"code":"var _jsxFileName = \"/Users/henriqueolivoantonio/Desktop/Projects/damas/src/page/index.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Board, Square, Piece } from './styles';\nimport { showMovement, movePiece } from '../logic';\nimport { showMovementsAction } from '../store/modules/board/actions';\nexport default function Page() {\n  const dispatch = useDispatch();\n  const board = useSelector(state => state.board.board);\n  const [selected, setSelected] = useState(null);\n\n  function showMovements({\n    square\n  }) {\n    dispatch(showMovementsAction({\n      board: showMovement({\n        board,\n        square\n      })\n    }));\n    setSelected(square);\n  }\n\n  function movePieces({\n    square\n  }) {\n    return movePiece({\n      square,\n      selected\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Board, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, board.map(row => row.map(sq => /*#__PURE__*/React.createElement(Square, {\n    key: row.indexOf(sq),\n    color: sq.color,\n    onClick: () => movePieces({\n      square: sq\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, sq.piece && /*#__PURE__*/React.createElement(Piece, {\n    key: row.indexOf(sq),\n    color: sq.piece.color,\n    onClick: () => showMovements({\n      square: sq\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/henriqueolivoantonio/Desktop/Projects/damas/src/page/index.js"],"names":["React","useState","useSelector","useDispatch","Container","Board","Square","Piece","showMovement","movePiece","showMovementsAction","Page","dispatch","board","state","selected","setSelected","showMovements","square","movePieces","map","row","sq","indexOf","color","piece"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmCC,KAAnC,QAAgD,UAAhD;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,UAAxC;AACA,SAASC,mBAAT,QAAoC,gCAApC;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,KAAK,GAAGX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACD,KAAN,CAAYA,KAAxB,CAAzB;AACA,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,IAAD,CAAxC;;AAEA,WAASgB,aAAT,CAAuB;AAAEC,IAAAA;AAAF,GAAvB,EAAmC;AACjCN,IAAAA,QAAQ,CAACF,mBAAmB,CAAC;AAAEG,MAAAA,KAAK,EAAEL,YAAY,CAAC;AAAEK,QAAAA,KAAF;AAASK,QAAAA;AAAT,OAAD;AAArB,KAAD,CAApB,CAAR;AACAF,IAAAA,WAAW,CAACE,MAAD,CAAX;AACD;;AAED,WAASC,UAAT,CAAoB;AAAED,IAAAA;AAAF,GAApB,EAAgC;AAC9B,WAAOT,SAAS,CAAC;AAAES,MAAAA,MAAF;AAAUH,MAAAA;AAAV,KAAD,CAAhB;AACD;;AAED,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACO,GAAN,CAAWC,GAAD,IACTA,GAAG,CAACD,GAAJ,CAASE,EAAD,iBACN,oBAAC,MAAD;AACE,IAAA,GAAG,EAAED,GAAG,CAACE,OAAJ,CAAYD,EAAZ,CADP;AAEE,IAAA,KAAK,EAAEA,EAAE,CAACE,KAFZ;AAGE,IAAA,OAAO,EAAE,MAAML,UAAU,CAAC;AAAED,MAAAA,MAAM,EAAEI;AAAV,KAAD,CAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,EAAE,CAACG,KAAH,iBACC,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEJ,GAAG,CAACE,OAAJ,CAAYD,EAAZ,CADP;AAEE,IAAA,KAAK,EAAEA,EAAE,CAACG,KAAH,CAASD,KAFlB;AAGE,IAAA,OAAO,EAAE,MAAMP,aAAa,CAAC;AAAEC,MAAAA,MAAM,EAAEI;AAAV,KAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADF,CADD,CADH,CADF,CADF;AAuBD","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { Container, Board, Square, Piece } from './styles';\nimport { showMovement, movePiece } from '../logic';\nimport { showMovementsAction } from '../store/modules/board/actions';\n\nexport default function Page() {\n  const dispatch = useDispatch();\n  const board = useSelector((state) => state.board.board);\n  const [selected, setSelected] = useState(null);\n\n  function showMovements({ square }) {\n    dispatch(showMovementsAction({ board: showMovement({ board, square }) }));\n    setSelected(square);\n  }\n\n  function movePieces({ square }) {\n    return movePiece({ square, selected });\n  }\n\n  return (\n    <Container>\n      <Board>\n        {board.map((row) =>\n          row.map((sq) => (\n            <Square\n              key={row.indexOf(sq)}\n              color={sq.color}\n              onClick={() => movePieces({ square: sq })}\n            >\n              {sq.piece && (\n                <Piece\n                  key={row.indexOf(sq)}\n                  color={sq.piece.color}\n                  onClick={() => showMovements({ square: sq })}\n                />\n              )}\n            </Square>\n          ))\n        )}\n      </Board>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}